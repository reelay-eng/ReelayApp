type User @model @aws_api_key @aws_cognito_user_pools @auth(rules: [{allow: owner, operations: [create, update, delete]}]) {
  id: ID!
  username: String!
  email: String @aws_cognito_user_pools
  phoneNumber: String @aws_cognito_user_pools
  birthdate: AWSDate @aws_cognito_user_pools
  createdReelayIDs: [ID!]
  userFollowers: [ID]
  usersFollowing: [ID]
}

type Reelay @model @aws_api_key @aws_cognito_user_pools @auth(rules: [{allow: owner, operations: [create, update, delete]}]) @key(name: "reelaysByUploadDate", fields: ["visibility", "uploadedAt"], queryField: "reelaysByUploadDate") {
  id: ID!
  creatorID: ID!
  isMovie: Boolean
  isSeries: Boolean
  movieID: ID!
  seriesSeason: Int
  seasonEpisode: Int
  uploadedAt: AWSDateTime
  tmdbTitleID: ID
  videoS3Key: String
  visibility: String
}

type Movie @model @auth(rules: [{allow: private, operations: [read]}]) {
  id: ID!
  title: String!
  description: String
  releaseDate: AWSDate
  runningTime: Int
}