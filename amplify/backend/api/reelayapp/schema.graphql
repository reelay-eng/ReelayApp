type User @model @aws_api_key @aws_cognito_user_pools @auth(rules: [{allow: owner, operations: [create, update, delete]}]) {
  id: ID!
  username: String!
  email: String @aws_cognito_user_pools
  phoneNumber: String @aws_cognito_user_pools
  dateOfBirth: AWSDate @aws_cognito_user_pools
  createdReelayIDs: [ID!]
}

type Reelay 
    @model @aws_api_key 
    @aws_cognito_user_pools 
    @auth(rules: [{allow: owner, operations: [create, update, delete]}]) 
    @key(name: "reelaysByUploadDate", fields: ["visibility", "uploadedAt"], queryField: "reelaysByUploadDate")
{
  id: ID!
  creatorID: ID!
  isMovie: Boolean
  isSeries: Boolean
  movieID: ID!
  seriesSeason: Int
  seasonEpisode: Int
  uploadedAt: AWSDateTime
  tmdbTitleID: ID
  videoS3Key: String
  visibility: String
}

type Movie @model @auth(rules: [{allow: private, operations: [read]}]) {
  id: ID!
  title: String!
  description: String
  releaseDate: AWSDate
  runningTime: Int
}

type VodAsset @model (subscriptions: {level: public})
@auth(
  rules: [
    {allow: groups, groups:["Admin"], operations: [create, update, delete, read]},
    {allow: private, operations: [read]}
  ]
)
{
  id:ID!
  title:String!
  description:String!

  #DO NOT EDIT
  video:VideoObject @connection
}

#DO NOT EDIT
type VideoObject @model
@auth(
  rules: [
    {allow: groups, groups:["Admin"], operations: [create, update, delete, read]},
    {allow: private, operations: [read]}
  ]
)
{
  id:ID!
  token: String @function(name: "reelayvod-${env}-tokenGen")
}
